<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>unix on Colin Spear</title>
    <link>https://www.colinspear.com/tags/unix/</link>
    <description>Recent content in unix on Colin Spear</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 10 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.colinspear.com/tags/unix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bash</title>
      <link>https://www.colinspear.com/technical-posts/bash/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.colinspear.com/technical-posts/bash/</guid>
      <description>At the moment, this is just a dumping ground for useful tidbits I find / need in my daily work. At some point I will get around to organizing and formalizing.
Parameter Expansion Bash reference manual
Slice a string
a=&amp;#34;teleport&amp;#34; b=${a:4:7} echo $b &amp;gt; port Replace a portion of a string
The pattern is ${parameter/pattern/string} to replace the first occurence of pattern with string or ${parameter//pattern/string} to replace all occurrences.</description>
    </item>
    
    <item>
      <title>awk</title>
      <link>https://www.colinspear.com/technical-posts/awk/</link>
      <pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.colinspear.com/technical-posts/awk/</guid>
      <description>Basic syntax awk [ options ] script filename Where script is either a single awk command or file of awk commands. Awk commands look like this:
TODO and filename can be omitted if you&amp;rsquo;re piping in standard input.
Commands Options Examples Length of the longest line in a file awk &amp;#39;{ if (length($0) &amp;gt; max) max = length($0) }; END { print max }&amp;#39; file Selecting, filtering, and basic arithmetic Sum a field, specify delimiter awk -F &amp;#39;\t&amp;#39; &amp;#39;{print sum+=$1;} END {print sum}&amp;#39; file.</description>
    </item>
    
    <item>
      <title>Sed</title>
      <link>https://www.colinspear.com/technical-posts/sed/</link>
      <pubDate>Sun, 30 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.colinspear.com/technical-posts/sed/</guid>
      <description>This is an ongoing work in progress, please let me know if you have any suggestions/feedback.
Basic syntax sed [ options ] script filename Where script is either a single sed command or file of sed commands (must use with -f option). Sed commands look like this:
command/pattern/replacement/command and filename can be omitted if you&amp;rsquo;re piping in standard input.
Commands  p: print s: substitute d: delete line  Options  -e: reads the following argument as a script (allows for multiple instructions to be passed at once) -n: don&amp;rsquo;t print to the terminal  Examples Print lines matching a pattern to stdout:</description>
    </item>
    
  </channel>
</rss>
